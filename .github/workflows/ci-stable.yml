# While our "example" application has the platform-specific code,
# for simplicity we are compiling and testing everything on the Ubuntu environment only.
# For multi-OS testing see the `cross.yml` workflow.

on: [push, pull_request]

name: CI stable

env:
  RUST_BACKTRACE: 1

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo check
        run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo check
        run: cargo test

  ## Based on: https://github.com/xd009642/tarpaulin#github-actions
  ## This is not working I got error:
  ##      Running `rustc --crate-name build_script_build --edition=2021 build.rs --error-format=json --json=diagnostic-rendered-ansi,artifacts,future-incompat --crate-type bin --emit=dep-info,link -C embed-bitcode=no -C debuginfo=2 -C metadata=ec18b5af0917c641 -C extra-filename=-ec18b5af0917c641 --out-dir /__w/rust-binance-cli/rust-binance-cli/target/debug/build/binance-cli-ec18b5af0917c641 -C incremental=/__w/rust-binance-cli/rust-binance-cli/target/debug/incremental -L dependency=/__w/rust-binance-cli/rust-binance-cli/target/debug/deps --extern vergen=/__w/rust-binance-cli/rust-binance-cli/target/debug/deps/libvergen-30b766894a035a15.rlib -Cdebuginfo=2 --cfg=tarpaulin -Clink-dead-code -L native=/__w/rust-binance-cli/rust-binance-cli/target/debug/build/libgit2-sys-fcaa6b8edaf02ab7/out/build`
  ##      Running `/__w/rust-binance-cli/rust-binance-cli/target/debug/build/binance-cli-ec18b5af0917c641/build-script-build`
  ## error: failed to run custom build command for `binance-cli v0.7.3 (/__w/rust-binance-cli/rust-binance-cli)`
  ##
  ## Caused by:
  ##   process didn't exit successfully: `/__w/rust-binance-cli/rust-binance-cli/target/debug/build/binance-cli-ec18b5af0917c641/build-script-build` (exit status: 1)
  ##   --- stderr
  ##   Error: config value 'safe.directory' was not found; class=Config (7); code=NotFound (-3)
  #coverage:
  #  name: Tarpaulin code coverage
  #  runs-on: ubuntu-latest
  #  container:
  #    image:                    xd009642/tarpaulin:develop-nightly
  #    options:                  --security-opt seccomp=unconfined
  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v3

  #    - name: Generate code coverage
  #      run: |
  #        cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml

  #    - name: Upload to codecov.io
  #      uses: codecov/codecov-action@v3
  #      with:
  #        # Added CODECOV_TOKEN to repo in Settings -> Secrets:
  #        #    https://github.com/winksaville/rust-binance-cli/settings/secrets/actions
  #        # Then click "New repository secret" adding CODECOV_TOKEN as name and
  #        # the token from:
  #        #    https://app.codecov.io/gh/winksaville/rust-binance-cli/settings
  #        #
  #        token: ${{secrets.CODECOV_TOKEN}} # Seems to be required
  #        fail_ci_if_error: true

  #    - name: Archive code coverage results
  #      uses: actions/upload-artifact@v1
  #      with:
  #        name: code-coverage-report
  #        path: cobertura.xml

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Run cargo fmt
        run: cargo fmt --all -- --check

      - name: Run cargo clippy
        run: cargo clippy -- -D warnings
